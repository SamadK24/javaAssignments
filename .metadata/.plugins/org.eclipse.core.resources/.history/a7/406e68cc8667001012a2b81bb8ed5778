package com.swabhav.GuitarFinal.test;

import java.util.*;

import com.swabhav.GuitarFinal.model.*;

public class GuitarMain {
    private static final Scanner sc = new Scanner(System.in);
    private static final GuitarInventory inventory = new GuitarInventory();

    public static void main(String[] args) {
        preloadInventory(); 

        System.out.println("Welcome to Guitar Inventory System!");
        String role = getRoleInput();

        if (role.equalsIgnoreCase("admin")) {
            adminMenuLoop();
        } else {
            userMenuLoop();
        }
        System.out.println("Thank you for using the system!");
    }

    

    private static void adminMenuLoop() {
        while (true) {
            System.out.println("\n==Admin Menu==");
            System.out.println("1.Add Guitar");
            System.out.println("2.View Inventory");
            System.out.println("3.Exit");
            System.out.print("Enter your choice: ");

            String choice = sc.nextLine();
            switch (choice) {
                case "1":
                    addGuitar();
                    break;
                case "2":
                    displayInventory();
                    break;
                case "3":
                    return;
                default:
                    System.out.println("Invalid choice.Try again.");
            }
        }
    }

    private static void userMenuLoop() {
        while (true) {
            System.out.println("\n==User Menu===");
            System.out.println("1.Search Guitar(No need for exact specifications,just tell us what you want)");
            System.out.println("2.Exit");
            System.out.print("Enter your choice: ");

            String choice = sc.nextLine();
            switch (choice) {
                case "1":
                    searchGuitars();
                    break;
                case "2":
                    return;
                default:
                    System.out.println("Invalid choice. Try again.");
            }
        }
    }

    

    private static void addGuitar() {
        try {
            System.out.print("Enter Serial Number: ");
            String serialNumber = sc.nextLine();

            System.out.print("Enter Price: ");
            double price = Double.parseDouble(sc.nextLine());

            GuitarSpec spec = getUserSpecInput();

            inventory.addGuitar(serialNumber, price, spec);
            System.out.println("Guitar added successfully.");
        } catch (NumberFormatException e) {
            System.out.println("Invalid input. Price must be a number.");
        } catch (IllegalArgumentException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }

    private static void displayInventory() {
        List<Final_Guitar> guitars = inventory.getAllGuitars();
        if (guitars.isEmpty()) {
            System.out.println("Inventory is empty.");
            return;
        }
        for (Final_Guitar guitar : guitars) {
            printGuitarDetails(guitar);
        }
    }


    private static void searchGuitars() {
        try {
            GuitarSpec searchSpec = getUserSpecInput();

            List<Final_Guitar> results = inventory.flexibleSearch(searchSpec);

            if (results.isEmpty()) {
                System.out.println("No matching guitars found.");
            } else {
                for (Final_Guitar guitar : results) {
                    printGuitarDetails(guitar);
                }
            }
        } catch (IllegalArgumentException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }


    private static String getRoleInput() {
        while (true) {
            System.out.print("Enter role (Admin/User): ");
            String role = sc.nextLine().trim().toLowerCase();
            if (role.equals("admin") || role.equals("user")) {
                return role;
            } else {
                System.out.println("Invalid role. Please enter Admin or User.");
            }
        }
    }

    private static GuitarSpec getUserSpecInput() {
        System.out.println("\nEnter Guitar Specifications (leave blank to skip any):");

        Builder builder = null;
        System.out.print("Builder (FENDER, MARTIN, GIBSON): ");
        String builderInput = sc.nextLine().trim();
        if (!builderInput.isEmpty()) {
            builder = Builder.valueOf(builderInput.toUpperCase());
        }

        System.out.print("Model: ");
        String model = sc.nextLine().trim();

        Integer numStrings = 0;
        System.out.print("Number of Strings: ");
        String stringsInput = sc.nextLine().trim();
        if (!stringsInput.isEmpty()) {
            numStrings = Integer.parseInt(stringsInput);
        }

        Type type = null;
        System.out.print("Type (ACOUSTIC, ELECTRIC): ");
        String typeInput = sc.nextLine().trim();
        if (!typeInput.isEmpty()) {
            type = Type.valueOf(typeInput.toUpperCase());
        }

        Wood backWood = null;
        System.out.print("Back Wood (COCOBOLO, MAHOGANY, MAPL, etc): ");
        String backWoodInput = sc.nextLine().trim();
        if (!backWoodInput.isEmpty()) {
            backWood = Wood.valueOf(backWoodInput.toUpperCase());
        }

        Wood topWood = null;
        System.out.print("Top Wood (BRAZILIAN_ROSEWOOD, CEDAR, etc): ");
        String topWoodInput = sc.nextLine().trim();
        if (!topWoodInput.isEmpty()) {
            topWood = Wood.valueOf(topWoodInput.toUpperCase());
        }

        return new GuitarSpec(builder, model, numStrings, type, backWood, topWood);
    }


    private static void printGuitarDetails(Final_Guitar guitar) {
        GuitarSpec spec = guitar.getSpec();
        System.out.println("\n--- Match Found ---");
        System.out.println("Serial: " + guitar.getSerialNumber());
        System.out.println("Price: $" + guitar.getPrice());
        System.out.println("Builder: " + spec.getBuilder());
        System.out.println("Model: " + spec.getModel());
        System.out.println("Strings: " + spec.getNumStrings());
        System.out.println("Type: " + spec.getType());
        System.out.println("Back Wood: " + spec.getBackwood());
        System.out.println("Top Wood: " + spec.getTopwood());
        System.out.println("--------------------");
    }

    private static void preloadInventory() {
        inventory.addGuitar("123", 1500.0,
                new GuitarSpec(Builder.FENDER, "Stratocastor", 6, Type.ELECTRIC, Wood.COCOBOLO, Wood.BRAZILIAN_ROSEWOOD));
        inventory.addGuitar("124", 1600.0,
                new GuitarSpec(Builder.FENDER, "Stratocastor", 4, Type.ELECTRIC, Wood.INDIAN_ROSEWOOD, Wood.CEDAR));
        inventory.addGuitar("125", 1700.0,
                new GuitarSpec(Builder.MARTIN, "D-18", 12, Type.ACOUSTIC, Wood.MAPL, Wood.MAHOGANY));
    }
}
