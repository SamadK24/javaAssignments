package com.swabhav.jdbc;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class TransactionExample {
	public static void main(String[] args) {
		Connection con = null;
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");

			con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jdbc_demo", "root", "samadKasu12@#");
			System.out.println("Connection establised successfully!!");
			con.setAutoCommit(false);
			PreparedStatement withdrawStmt = con
					.prepareStatement("UPDATE accounts SET balance = balance - ? WHERE id = ? AND balance >= ?");
			withdrawStmt.setDouble(1, 5000);
			withdrawStmt.setInt(2, 1);
			withdrawStmt.setDouble(3, 5000);

			int withdrawRows = withdrawStmt.executeUpdate();

			if (withdrawRows != 1) {
				throw new RuntimeException(
						"❌ Withdrawal failed: Insufficient balance or account not found for Amit (ID: 1)");
			}

			PreparedStatement depositStmt = con
					.prepareStatement("UPDATE accounts SET balance = balance + ? WHERE id = ?");
			depositStmt.setDouble(1, 5000); 
			depositStmt.setInt(2, 2); 
			int depositRows = depositStmt.executeUpdate();
			if (depositRows != 1) {
				throw new RuntimeException("❌ Deposit failed: Destination account not found for Pramod (ID: 2)");
			}
			con.commit();
			System.out.println("✅ Transaction successful! ₹5000 transferred from Amit to Pramod.");

		} catch (Exception e) {
			System.out.println("⚠️ Error: " + e.getMessage());
			try {
				if (con != null) {
					con.rollback();
					System.out.println("⛔️ Transaction rolled back.");
				}
			} catch (SQLException rollbackEx) {
				rollbackEx.printStackTrace();
			}
		} finally {
			try {
				if (con != null && !con.isClosed())
					con.close();
			} catch (SQLException ex) {
				ex.printStackTrace();
			}
		}
	}
}
